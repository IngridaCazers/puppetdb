version: '3.7'

services:
  puppet:
    hostname: puppet
    image: ${PUPPETSERVER_IMAGE:-puppet/puppetserver:latest}
    environment:
      - PUPPERWARE_ANALYTICS_ENABLED=${PUPPERWARE_ANALYTICS_ENABLED:-false}
      - PUPPETSERVER_HOSTNAME=puppet
      - CA_ALLOW_SUBJECT_ALT_NAMES=true
      - PUPPETDB_SERVER_URLS=https://puppetdb:8081
    volumes:
      - puppetserver-config:/etc/puppetlabs/puppet
    ports:
      - 8140:8140

  postgres:
    hostname: postgres
    image: postgres:9.6
    environment:
      # loading certs requires a non-default PGDATA
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=puppetdb
      - POSTGRES_USER=puppetdb
      - POSTGRES_DB=puppetdb
    healthcheck:
      # existence check for puppetdb database
      test: [ 'CMD-SHELL', "psql --username=puppetdb puppetdb -c ''" ]
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 90s
    expose:
      - 5432
    volumes:
      - puppetdb-postgres:/var/lib/postgresql/data
      - ./puppetdb/postgres-custom:/docker-entrypoint-initdb.d

  puppetdb:
    hostname: puppetdb
    image: ${PUPPETDB_IMAGE:-puppet/puppetdb}
    environment:
      - PUPPERWARE_ANALYTICS_ENABLED=${PUPPERWARE_ANALYTICS_ENABLED:-false}
      - PUPPETDB_POSTGRES_HOSTNAME=postgres
      - PUPPETDB_PASSWORD=puppetdb
      - PUPPETDB_USER=puppetdb
      - PUPPETSERVER_HOSTNAME=puppet
    volumes:
      - puppetdb:/opt/puppetlabs/server/data/puppetdb
    ports:
      - 8080
      - 8081
    depends_on:
      - postgres
      - puppet

networks:
  default:
    name: puppetdb_test
volumes:
  puppetserver-config:
  puppetdb:
  puppetdb-postgres:
